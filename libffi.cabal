Name:               libffi
cabal-version:      >= 1.8
Version:            0.2
Description:        A binding to libffi, allowing C functions of types only known at runtime to be called from Haskell.
License:            BSD3
License-file:       LICENSE
Copyright:          Remi Turk 2008-2009
Author:             Remi Turk
Maintainer:         remi.turk@gmail.com
Homepage:           http://haskell.org/haskellwiki/Library/libffi
Stability:          alpha
Synopsis:           A binding to libffi
Tested-With:        GHC == 7.0.4
                  , GHC == 7.2.2
                  , GHC == 7.4.2
                  , GHC == 7.6.3
                  , GHC == 7.8.4
                  , GHC == 7.10.3
                  , GHC == 8.0.2
                  , GHC == 8.2.2
                  , GHC == 8.4.4
                  , GHC == 8.6.5
                  , GHC == 8.8.4
                  , GHC == 8.10.7
                  , GHC == 9.0.2
                  , GHC == 9.2.2
extra-source-files: CHANGELOG.md, README.md
Build-Type:         Simple
Category:           Foreign

source-repository head
  type:                git
  location:            https://github.com/remiturk/libffi

flag static
  description:      Force static linking against @libffi@
  default:          True

library
  build-depends:       base >= 3 && < 5, bytestring
  exposed-modules:     Foreign.LibFFI,
                       Foreign.LibFFI.Base,
                       Foreign.LibFFI.Types,
                       Foreign.LibFFI.FFITypes,
                       Foreign.LibFFI.Internal
  if flag(static)
    -- It would be shorter to just use this:
    --
    -- cc-options:        -Wl,-Bstatic -lffi -Wl,-Bdynamic
    --
    -- But `cabal check` doesn't like using the -l option in cc-options,
    -- instead recommending extra-libraries. We really do need to use -l here,
    -- however, as it is crucial that -lffi appear in between
    -- -Wl,-Bstatic ... -Wl,-Bdynamic in order for this to work. We use
    -- ghc-options instead to work around `cabal check`'s pickiness.
    ghc-options:       -optl-Wl,-Bstatic -optl-Wl,-lffi -optl-Wl,-Bdynamic
    includes:          ffi.h ffitarget.h
    if os(darwin)
      -- libffi already gets statically linked on Darwin when building an
      -- executable and -Bstatic isn't supported by the linker, so we disable
      -- the static flag.
      build-depends:  base < 0 && > 0
  else
    pkgconfig-depends: libffi
